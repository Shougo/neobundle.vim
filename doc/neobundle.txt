*neobundle.txt*	Ultimate Vim package manager

Version: 2.0
Author : Shougo <Shougo.Matsu at gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*neobundle-contents*

Introduction		|neobundle-introduction|
Usage			|neobundle-usage|
Install			|neobundle-install|
Interface		|neobundle-interface|
  Functions		  |neobundle-functions|
  Commands		  |neobundle-commands|
  Variables		  |neobundle-variables|
Configulation Examples	|neobundle-examples|
Unite sources		|neobundle-unite-sources|
Changelog		|neobundle-changelog|

==============================================================================
INTRODUCTION					*neobundle-introduction*

*neobundle.vim* is the ultimate Vim package manager. This plugin is based on
Vundle.vim(https://github.com/gmarik/vundle), But I added some features.

For example:
 * Uses |vimproc| when you have it
 * |unite.vim| interface
 * Revision lock
 * Supports svn/Mercurial repository
 * Specify base path

==============================================================================
USAGE						*neobundle-usage*

Refer to setting examples:
|neobundle-examples|

To update, run this command.
>
	:NeoBundleInstall!
<
Note: To use unite.vim interface, use this command (required vimproc and
unite.vim plugin).
>
	:Unite neobundle/install:!
<
This plugin setting is compatible with Vundle.vim :-)

Note: Instead of vundle, neobundle has not search plugins system.  But you can
search popular plugins and add neobundle settings using Vimpusher web
service(Registration is required).
	http://www.vimpusher.com/
Or using vim-scripts.org.
	http://vim-scripts.org/

==============================================================================
INSTALL						*neobundle-install*

In first, git clone from the repository.

Note: git command is required.
>
	$ mkdir -p ~/.vim/.bundle
	$ git clone git:Shougo/neobundle.vim.git ~/.vim/.bundle/neobundle.vim
<
And a path to the repository directory.
>
	set runtimepath+={path to neobundle directory}
<
Example:
>
	set runtimepath+=~/.vim/.bundle/neobundle.vim
<
==============================================================================
INTERFACE					*neobundle-interface*

------------------------------------------------------------------------------
FUNCTIONS 					*neobundle-functions*

neobundle#rc({base-path})			*neobundle#rc()*
		Initialize neobundle.vim. {base-path} is neobundle downloaded
		file base path.
>
	set nocompatible
	filetype off
	filetype plugin indent off
	set runtimepath+={path to neobundle directory}
	call neobundle#rc(expand('~/.bundle'))
	
	NeoBundle 'git://github.com/Shougo/neocomplcache-clang.git'
	
	filetype plugin indent on
<
neobundle#source({bundle-names})		*neobundle#source()*
		Same to |:NeoBundleSource|.
		{bundle-names} is bundle name list.

------------------------------------------------------------------------------
COMMANDS 					*neobundle-commands*

:NeoBundle {repository} [,{revision}]		*:NeoBundle*
:NeoBundle {repository} [,{dictionary}]
		Configures neobundle.
		Note: If you omit the protocol(ex: git or https) in git type,
		|g:neobundle_default_git_protocol| is used.

		{dictionary} has following keys:

		rev			(String)
		Revision number or branch/tag name.

		directory		(String)
		Relative directory path from base directory(set by
		|neobundle#rc()|).

		base			(String)
		Directory base path. If you omit it, used |neobundle#rc()| base
		path.

		type			(String)
		Repository type.  If you omit repository type, it is detected
		automatically from {repository}.
		For example: nosync, git, svn, hg, ...

		rtp			(String)
		Specify runtime path.
		You may use this option when the repository has Vim plugin in
		sub directory.
		For example: https://github.com/rstacruz/sparkup

		build			(Dictionary)
		Specify build script.
		You may use this option when the plugin have to be built.
		This command is executed by |system()| or |vimproc#system()| in
		plugin runtimepath.
		For example: |vimproc|

		This dictionary has following keys:

			windows		(String)
			Specify Windows environment build script.

			mac		(String)
			Specify Mac OS X environment build script.

			cygwin		(String)
			Specify Cygwin environment build script.

			unix		(String)
			Specify Unix environment build script.

			others		(String)
			Specify others environment build script.

		Examples:
>
		NeoBundle 'git_repository_uri'
		NeoBundle 'script_name'
		NeoBundle 'http://github.com/tpope/vim-fugitive.git'
		NeoBundle 'http://svn.macports.org/repository/macports/contrib/mpvim/'
		NeoBundle 'https://bitbucket.org/ns9tks/vim-fuzzyfinder'
		NeoBundle 'git://github.com/Shougo/unite.vim.git', {'directory' : 'unite'}
		NeoBundle 'git://host/path/repo.git', {'type': 'hg'}
		NeoBundle 'rstacruz/sparkup', {'rtp': 'vim'}
<
		Neobundle supports revision lock.
		Note: It's manual to restore its revision. Or, set to revision
		"master".
>
		NeoBundle 'Shougo/vimshell', '3787e5'
		NeoBundle 'Shougo/vimshell', 'master'
<
		If type is "nosync", neobundle does not update
		automatically(like pathogen.vim).
		Note: If you want to use neobundle like pathogen.vim, you
		should set base path to separate from standard neobundle
		bundles paths.
>
		NeoBundle 'muttator', {'type' : 'nosync', 'base' : '~/.vim/bundle'}
<
:NeoBundleInstall [{name}...]		*:NeoBundleInstall*
		Installs {name} plugins.
		If {name} is omited, all configured plugin is installed.

:NeoBundleInstall! [{name}]... 		*:NeoBundleInstall!*
		Installs and updates {name} plugins.
		If {name} is omited, all configured plugin is installed
		and updated.
:NeoBundleUpdate [{name}]			*:NeoBundleUpdate*
		Same to |:NeoBundleInstall!|.

:NeoBundleClean [{bang} [{name}...]] 	*:NeoBundleClean*
		Removes non configured plugins. If {bang} is added, force
		remove plugins. If {name} are added, remove
		{name} plugins.

:NeoBundleList 					*:NeoBundleList*
		Print list of configured neobundles.

:NeoBundleLog 					*:NeoBundleLog*
		Print previous install logs.

:NeoBundleLazy {repository} [, {dictionary}]	*:NeoBundleLazy*
:NeoExternalBundle {repository} [, {dictionary}]
						*:NeoExternalBundle*
		This command register neobundle, but don't add to
		'runtimepath'.
		Note: |:NeoExternalBundle| is deprecated name.

:NeoBundleSource [{name}...]			*:NeoBundleSource*
		|:source| {name} plugins.
		If omit {name}, |:source| all lazy plugins.
		Note: This command is used to load the neobundles configured by
		|:NeoBundleLazy|.

------------------------------------------------------------------------------
VARIABLES 					*neobundle-variables*

g:neobundle_default_git_protocol		*g:neobundle_default_git_protocol*
		The default protocol used for git(github). If you use proxy
		server, you may change the value to "https".

		Default value is "git".

g:neobundle_rm_command				*g:neobundle_rm_command*
		The remove file command in |:NeoBundleClean|.

		Default value is "rmdir /S /Q" in Windows or "rm -rf" in
		others.

==============================================================================
EXAMPLES					*neobundle-examples*
>
	set nocompatible                " recommend
	filetype off                    " required!
	filetype plugin indent off      " required!
	
	if has('vim_starting')
	  set runtimepath+={path to neobundle directory}
	endif
	
	call neobundle#rc(expand('~/.bundle'))

	" let neobundle manage neobundle
	"NeoBundle 'Shougo/neobundle.vim'
	
	" My Bundles here:
	"
	" Original repositories in github
	NeoBundle 'Shougo/neocomplcache-clang.git'
	NeoBundle 'tpope/vim-fugitive'
	" Vim-script repositories
	NeoBundle 'FuzzyFinder'
	NeoBundle 'rails.vim'
	" Non-github repos
	NeoBundle 'git://git.wincent.com/command-t.git'
	" Non-git repos
	NeoBundle 'http://svn.macports.org/repository/macports/contrib/mpvim/'
	NeoBundle 'https://bitbucket.org/ns9tks/vim-fuzzyfinder'

	" Comment is allowed.
	NeoBundle 'https://bitbucket.org/ns9tks/vim-fuzzyfinder' " Foo, Bar

	" Build repos.
	NeoBundle 'Shougo/vimproc', {
	      \ 'build' : {
	      \     'windows' : 'echo "Sorry, cannot update vimproc binary file in Windows."',
	      \     'cygwin' : 'make -f make_cygwin.mak',
	      \     'mac' : 'make -f make_mac.mak',
	      \     'unix' : 'make -f make_unix.mak',
	      \    },
	      \ }

	" Lazy load.
	NeoBundleLazy 'c9s/perlomni.vim.git'
	NeoBundleSource perlomni.vim
	NeoBundleLazy 'klen/python-mode'
	autocmd FileType python
	      \ NeoBundleSource python-mode

	filetype plugin indent on       " required!
<
==============================================================================
UNITE SOURCES						*neobundle-unite-sources*

Here let me explain about a source for |unite| provided in neobundle.

							*neobundle-unite-source-neobundle*
neobundle
		Nominates bundles as a candidate.
		This source required |vimproc| plugin.
		
		Note: In windows
		If argment is bang(!), print plugins path instead of plugins status.
		Note: Others
		If argment is bang(!), print plugins status instead of plugins path.
		
		http://github.com/Shougo/vimproc

							*neobundle-unite-source-neobundle-install*
neobundle/install
		Install configured plugins.
		This source required |vimproc| plugin.
		http://github.com/Shougo/vimproc

		If argment is bang(!), install and update all plugins.

		Source arguments:
		bundle names.

		Example:
>
		:Unite neobundle/install:!
		:Unite neobundle/install:neocomplcache
		:Unite neobundle/install:neocomplcache:unite.vim
<
							*neobundle-unite-source-neobundle-log*
neobundle/log
		Print previous neobundle install logs.

							*neobundle-unite-source-neobundle-update*
neobundle/update
		Install and update configured plugins.
		Note: This source is same to "neobundle/intall:!" source.

							*neobundle-unite-source-neobundle-search*
neobundle/search
		Search plugins settings from "http://vim-scripts.org/".
		Note: This source requires "curl" or "wget" command.

							*neobundle-unite-source-neobundle-lazy*
neobundle/lazy
		List lazy configured plugins(not sourced by |:NeoBundleSource|).

Actions of each sources

neobundle					*unite-action-neobundle*
	update		Update bundles(Default action)
	delete		Delete bundles
	reinstall	Reinstall bundles
	narrow		Narrow bundle files
	edit		Browse bundle directory
	start		Browse github plugin page

neobundle/search				*unite-action-neobundle-search*
	yank		Yank plugin settings
	start		Browse github plugin page

neobundle/lazy					*unite-action-neobundle-lazy*
	source		Source plugin files
	start		Browse github plugin page

==============================================================================
CHANGELOG					*neobundle-changelog*

2012-06-02
- Added .git suffix.

2012-05-20
- Fixed reinstall error.

2012-05-16
- Improved :NeoBundleSource behavior.
- Deleted :NeoBundleFileTypeSource command.

2012-05-14
- Added :NeoBundleFileTypeSource command.

2012-05-13
- Fixed tags error.
- Improved reload behavior.
- Fixed :NeoBundleLazy.
- Added neobundle/lazy source.
- Fixed :NeoBundleExternal.
- Added test.
- Improved :NeoBundleSource.

2012-05-12
- Added NeoBundleLazy and NeoBundleSource command.
- Improved command implementation.
- Fixed NeoBundleSource behavior.

2012-05-06
- Improved neobundle source.

2012-05-03
- Added build option.
- Improved test.
- Improved revision lock behavior.
- Added neobundle/search source.
- Added start action.

2012-05-02
- Added g:neobundle_rm_command option.

2012-04-28
- Updated vital.

2012-04-25
- Improved :NeoBundleClean behavior.
- Added test.

2012-04-22
- Ver.2.0 development is started.
- Implemented :NeoBundleClean completion.
- Improved reload behavior.

------------------------------------------------------------------------------
ChangeLog neobundle 1.0:

2012-04-21
- Ver.1.0.
- Fixed documentation.

2012-04-19
- Fixed examples.

2012-04-17
- Updated documentation.
- Added base attribute.

2012-04-13
- Added g:neobundle_default_git_protocol variable.

2012-03-27
- Added neobundle/update source.
- Improved log.

2012-03-26
- Improved :NeoBundleInstall behavior.
- Improved neobundle/install source.
- Added :NeoBundleUpdate command.
- Implemented completion.

2012-03-03
- Improved documentation.

2012-02-24
- Fixed :NeoBundleInstall bug.

2012-02-16
- Fixed neobundle initialization.

2012-02-15
- Added neobundle#installer#has_vimproc().

2012-01-17
- Added Vimpusher web service description.

2012-01-11
- Fixed :NeoBundleClean bug.
- Comment line is allowed.
- Improved :NeoBundle parse.
- Fixed example.

2012-01-08
- Fixed clean eror.

2012-01-06
- Improved neobundle source view.
- Improved neobundle source behavior.
- Improved :NeoBundleClean behavior.

2012-01-05
- Fixed expand() problem.
- Improved neobundle source.

2012-01-03
- Added source completion.
- Improved neobundle/install source behavior.

2011-12-31
- Improved neobundle initialize.

2011-12-21
- Fixed substitute path separator.
- Improved use vital module.
- Don't independent unite.

2011-12-20
- Added edit and narrow action.

2011-12-19
- Added NeoExternalBundle command.

2011-12-07
- Improved assume protocols.

2011-12-06
- Improved option parse.

2011-12-02
- Improved reload.

2011-11-25
- Fixed for Mercurial.

2011-11-21
- Added README.

2011-11-18
- Improved installer.
- Improved examples.
- Added :NeoBundleList command.
- Fixed neobundle source error.

2011-11-17
- Improved parse name.
- Fixed parse config.

2011-11-16
- Reload autoload scripts.

2011-11-15
- Improved nosync.
- Implemented plugins reload.

2011-11-10
- Fixed parse bug.

2011-11-04
- Added :NeoBundleLog command.
- Added neobundle/log source.
- Improved log.
- Fixed for Vim 7.2.
- Fixed helptags error.
- Improved error message.

2011-11-02
- Fixed helptags.

2011-11-01
- Use git protocol instead of https.

2011-10-28
- Fixed :NeoBundleInstall error.
- Use --rebase.
- Supported change dicretory name.
- Improved documentation.

2011-10-26
- Improved lock revision.
- Fixed sync.

2011-10-25
- Improved install message.
- Fixed lock revision.

2011-10-23
- Fixed vimproc check.
- Improved neobundle/install source status messages.

2011-10-19
- Fixed documentation.
- Improved NeoBundleClean.
- Fixed :NeoBundleInstall bug.
- Improved :NeoBundleClean.
- Improved detect error.
- Added neobundle source.

2011-10-18
- Refactored.
- Fixed examples.

2011-10-17
- Improved neobundle source.

2011-10-06
- Supported revision.

2011-09-25
- Supported Subversion and Mercurial.

2011-09-24
- Fixed parse name.

2011-09-19
- Refactored local variable names.
- Fixed installer.

2011-09-18
- Added documentation.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
